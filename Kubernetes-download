## Step 1

sudo chmod 777 /etc/apt/sources.list.d

nano kubernetes.list

add

deb https://apt.kubernetes.io/ kubernetes-xenial main

This is added so that on update it will download all **source info of k8s** from this repo and apt-get work fine

----------------------------------------------------------------
## Step 2

This is for the Key 

sudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg| sudo apt-key add

OK

----------------------------------------------------------------
## Step 3

apt-get update

----------------------------------------------------------------

`Now all source registries info comes and also for K8s`
`which prev not come`
`GPG error: https://packages.cloud.google.com/apt kubernetes-xenial InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY B53DC80D13EDEF05`

-----------------------------------------------------------------
## Step 4

apt-get install -y kubelet kubeadm kubectl kubernetes-cni

-----------------------------------------------------------------
###Step 5 Master initialize
sudo swap off -d

sudo swapoff -a
root@rohit:/home/rohit# sudo kubeadm init

Got Error 

resolved here some how
# Commands from https://kubernetes.io/docs/setup/production-environment/container-runtimes/#containerd
apt-get update && apt-get install -y apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
apt-get update && apt-get install -y containerd.io

# Configure containerd
mkdir -p /etc/containerd
containerd config default > /etc/containerd/config.toml
systemctl restart containerd

Response : 
```
Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

kubernetes token:- 

kubeadm join 172.20.20.110:6443 --token 8i8jth.3j74u8oaebmnlljf \
	--discovery-token-ca-cert-hash sha256:f3a54dfbe368bc0b9ec483055f83ae7961c13adbe3c786c37d245bb3ef2a687e 

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 192.168.0.103:6443 --token b7fjjb.z68r8tpw5gpv96wf \
	--discovery-token-ca-cert-hash sha256:39f6e14c5bf98cfd6d5b0f30660dcee45b474c3954004c65b3fd41202328c143 
```

Links:
https://jhooq.com/14-steps-to-install-kubernetes-on-ubuntu-18-04-and-16-04/
https://www.youtube.com/watch?v=MyNnVurtSf0




