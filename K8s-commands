kubectl get pods --all-namespaces. : It shows the system pods which is used for managing the kubernetes data
kubectl get pods -o wide : It is used for showing all details of pod like ip , lable ,Node and that it.

sudo kubectl get nodes : It shows the active nodes like minikube,kubelet which handles the process of deployment
sudo kubectl get pods : shows all pods available

https://www.ibm.com/docs/en/cloud-paks/cp-management/2.3.x?topic=monitoring-removing-data-collector-docker-container-kubernetes-pod

kubectl delete pod <podname>
kubectl delete pod <podname> -c <container-name> : Multiple container is contained inside the container.
#To forcefully delete a pod, you can use the kubectl delete pod command with the --grace-period=0 flag to immediately terminate the pod without waiting for the default grace period of 30 seconds:
kubectl delete pod <pod-name> --grace-period=0 --force
kubectl delete deployment <deploymentname> : If you have created replicas in your deployment file, new pod will be created. If you need to stop the creation of new pods, you need to delete the deployment.
kubectl get deployment 

kubectl exec -it <pod_name> cmd(bash|sh) : works for the pod which has one container.
kubectl exec -it <pod_name> -c <container-name> cmd(bash|sh) : It is used when the pod contains the multiple container .



kubectl describe pod <pod-name> : For inspecting that what is going wrong inside the pod (but It gives status about container when it does not got to the runnig status , it meet with somthing configuration problem).
service
rc
rs
deployment

kubectl logs <pod-name> : This is checking the logs of container status after starting running and somthing happen .
kubectl edit pod superset-init-db-m5824 : It is used to edit Live maniefest file and auto reflect inside the container. ? ?

=================================================
Satefull and stateless application :

Replicaset of container is managed by deployment object but it will
orchestrate only stateless pods/application

So here this comes statefull object which manages replicaset of statefull application.

It allows the orchestration of replicated containers based on the same specifications, but maintains an identity that remains with the Pod through rescheduling. These Pods are no longer interchangeable due to this persistent identifier. However, matching any new Pods to existing volumes allows the state to persist.

kubectl get StatefulSets
kubectl delete StatefulSets superset-redis-master 

These things are available: - for deleting pod firstly you have to delete these things than only you can delete the pod. 
Service svc
ReplicaSet rs
ReplicaController rc
Deployment 
StatefullSet 
=============================================

Kubelet explain svc;
rs
rc


